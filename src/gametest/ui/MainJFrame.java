package gametest.ui;


import java.awt.Point;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import javax.swing.BorderFactory;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.Timer;


/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * MainJFrame.java
 *
 * Created on 21/06/2011, 18:27:12
 */
/**
 *
 * @author lucasaquiles
 */
public class MainJFrame extends javax.swing.JFrame {

    Timer timer, timerMoveToLeft, timerMoveToRight, timerMoveToDown, tmpTimer, pauseButton, timerPlaces;
    JLabel[][] places = new JLabel[2][9];

    /** Creates new form MainJFrame */
    public MainJFrame() {
        initComponents();

        timer = new Timer(60, null);
        timerMoveToLeft = new Timer(60, null);
        timerMoveToRight = new Timer(60, null);
        timerMoveToDown = new Timer(60, null);
        timerPlaces = new Timer(60, null);
        pauseButton = new Timer(60, new ActionListener() {

            public void actionPerformed(ActionEvent ae) {

                jButton1.setText("pausado!");
                jButton1.setEnabled(false);

                
            }
        });

        moveToUp();
        moveToDown();
        moveToLeft();
        moveToRight();

        mountPlaces();
        onColides();
    }

    public void onColides() {

        timerPlaces.addActionListener(new ActionListener() {

            public void actionPerformed(ActionEvent ae) {

                if (jPanelBound.getBounds().intersects(
                        jPanelSquare.getBounds())) {

                    System.out.println("AAAAEEEEEEEWWWWW");
                    getCurrentTimer();
                }
            }
        });
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jPanelBound = new javax.swing.JPanel();
        jPanelSquare = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
        });

        jButton1.setText("rodando");
        jButton1.setEnabled(false);

        jPanelBound.setBackground(new java.awt.Color(1, 1, 1));
        jPanelBound.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jPanelSquare.setIcon(new javax.swing.ImageIcon(getClass().getResource("/awesome.gif"))); // NOI18N

        javax.swing.GroupLayout jPanelBoundLayout = new javax.swing.GroupLayout(jPanelBound);
        jPanelBound.setLayout(jPanelBoundLayout);
        jPanelBoundLayout.setHorizontalGroup(
            jPanelBoundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelBoundLayout.createSequentialGroup()
                .addGap(205, 205, 205)
                .addComponent(jPanelSquare)
                .addContainerGap(272, Short.MAX_VALUE))
        );
        jPanelBoundLayout.setVerticalGroup(
            jPanelBoundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelBoundLayout.createSequentialGroup()
                .addContainerGap(287, Short.MAX_VALUE)
                .addComponent(jPanelSquare, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanelBound, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 309, Short.MAX_VALUE)
                        .addContainerGap(260, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanelBound, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addGap(15, 15, 15))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void mountPlaces() {
 
        int X = 10, Y = 10;
        
        final int SQUARE_WIDTH = 56;
        final int SQUARE_HEIGHT = 56;

        for (int i = 0; i < 2; i++) {

            for (int j = 0; j < 9; j++) {

                places[i][j] = new JLabel("[" + i + "]");
                System.out.println("[" + i + "][" + j + "]");

                if (i > 0) {

                    Y = (int) (places[i - 1][j].getBounds().getHeight() + Y);
                }
                if (j > 0) {

                    X = (int) (places[i][j - 1].getBounds().getWidth() + X);
                }

                places[i][j].setBounds(X, Y, SQUARE_WIDTH, SQUARE_HEIGHT);

                places[i][j].setIcon(new ImageIcon(getClass().getResource("/omg.gif")));
                places[i][j].setBorder(BorderFactory.createTitledBorder(""));

                jPanelBound.add(places[i][j]);
                Y = 10;
            }
            X = 10;
        }
    }

    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_UP) {
            System.out.println("to up ^");
            getCurrentTimer();
            timer.start();
            setCurrentTimer(timer);
        }
        if (evt.getKeyCode() == KeyEvent.VK_DOWN) {
            System.out.println("to down V");
            getCurrentTimer();
            timerMoveToDown.start();
            setCurrentTimer(timerMoveToDown);
        }
        if (evt.getKeyCode() == KeyEvent.VK_LEFT) {
            System.out.println("to left <<");
            getCurrentTimer();
            timerMoveToLeft.start();
            setCurrentTimer(timerMoveToLeft);
        }
        if (evt.getKeyCode() == KeyEvent.VK_RIGHT) {
            System.out.println("to right >>");
            getCurrentTimer();
            timerMoveToRight.start();
            setCurrentTimer(timerMoveToRight);
        }

        if (evt.getKeyCode() == KeyEvent.VK_SPACE) {
            getCurrentTimer();


        }
    }//GEN-LAST:event_formKeyPressed

    public Timer getCurrentTimer() {

        if (tmpTimer != null) {

            if (tmpTimer.isRunning()) {
                tmpTimer.stop();
                System.out.println("parou " + tmpTimer.isRunning());
            }

            tmpTimer = null;
        }
        return tmpTimer;
    }

    public void setCurrentTimer(Timer timer) {

        jButton1.setEnabled(true);
        jButton1.setText("ta funfando");
        this.tmpTimer = timer;
    }

    public void moveToRight() {
        timerMoveToRight.addActionListener(new ActionListener() {

            public void actionPerformed(ActionEvent ae) {

                jPanelSquare.setLocation((int) jPanelSquare.getLocation().getX() + 10, (int) (jPanelSquare.getLocation().getY()));

            }
        });
    }

    public void moveToDown() {

        timerMoveToDown.addActionListener(new ActionListener() {

            public void actionPerformed(ActionEvent ae) {
                jPanelSquare.setLocation((int) jPanelSquare.getLocation().getX(), (int) (jPanelSquare.getLocation().getY() + 10));
            }
        });
    }

    public void moveToLeft() {

        timerMoveToLeft.addActionListener(new ActionListener() {

            public void actionPerformed(ActionEvent ae) {


                jPanelSquare.setLocation((int) jPanelSquare.getLocation().getX() - 10, (int) (jPanelSquare.getLocation().getY()));

            }
        });
    }

    public void moveToUp() {

        timer.addActionListener(new ActionListener() {

            public void actionPerformed(ActionEvent ae) {

                jPanelSquare.setLocation((int) jPanelSquare.getLocation().getX(), (int) (jPanelSquare.getLocation().getY() - 10));
            }
        });

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new MainJFrame().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JPanel jPanelBound;
    private javax.swing.JLabel jPanelSquare;
    // End of variables declaration//GEN-END:variables
}
